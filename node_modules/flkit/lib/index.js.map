{"version":3,"sources":["../src/index.js"],"names":[],"mappings":";;;;QAiCgB,M,GAAA,M;QAQA,gB,GAAA,gB;QAaA,gB,GAAA,gB;;AAtDhB;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;;;AAEA;;;;AACA;;;;;AAKO,IAAM,oDAAN;AACA,IAAM,4CAAN;;AAEA,IAAM,sDAAN;AACA,IAAM,+EAAN;AACA,IAAM,yDAAN;AACA,IAAM,sDAAN;;AAEA,IAAM,wDAAN;AACA,IAAM,0DAAN;AACA,IAAM,wDAAN;;AAEA,IAAM,yDAAN;AACA,IAAM,kEAAN;;;;;AAKA,SAAS,MAAT,CAAgB,IAAhB,EAAoC;AAAA,MAAd,OAAc,yDAAJ,EAAI;;AACzC,MAAM,WAAW,mBAAiB,IAAjB,EAAuB,OAAvB,CAAjB;AACA,SAAO,SAAS,MAAT,EAAP;AACD;;;;;AAKM,SAAS,gBAAT,CAA0B,KAA1B,EAAiC,IAAjC,EAAuC;AAC5C,MAAI,cAAJ;AACA,QAAM,IAAN,CAAW,gBAAQ;AACjB,QAAI,KAAK,aAAL,KAAuB,IAA3B,EAAiC;AAC/B,cAAQ,KAAK,KAAb;AACA,aAAO,IAAP;AACD;AACF,GALD;AAMA,SAAO,KAAP;AACD;;;;AAIM,SAAS,gBAAT,CAA0B,KAA1B,EAAiC,IAAjC,EAAuC,KAAvC,EAA8C;AACnD,MAAM,OAAO,MAAM,IAAN,CAAW,gBAAQ;AAC9B,QAAI,KAAK,aAAL,KAAuB,IAA3B,EAAiC;AAC/B,WAAK,KAAL,GAAa,KAAb;AACA,aAAO,IAAP;AACD;AACF,GALY,CAAb;AAMA,MAAI,CAAC,IAAL,EAAW;AACT,UAAM,IAAN,CAAW;AACT,gBADS;AAET,kBAFS;AAGT,aAAO,GAHE;AAIT,qBAAe;AAJN,KAAX;AAMD;AACD,SAAO,KAAP;AACD","file":"index.js","sourcesContent":["import token_type from './util/token_type.js';\nimport BaseTemplate from './template/base.js';\nimport css_tokenize from './lang/css/tokenize.js';\nimport css_selector_tokenize from './lang/css/selector_tokenize.js';\nimport html_tokenize from './lang/html/tokenize.js';\nimport {token2Text as html_token_2_text} from './lang/html/util.js';\nimport {token2Text as css_token_2_text} from './lang/css/util.js';\nimport html_compress from './lang/html/compress.js';\n// import BaseTokenize from './util/tokenize.js';\nimport css_compress from './lang/css/compress.js';\nimport {\n  createToken as create_token,\n  createRawToken as create_raw_token\n} from './util/util_ext.js';\n\nexport const TokenType = token_type;\nexport const Template = BaseTemplate;\n\nexport const CssTokenize = css_tokenize;\nexport const CssSelectorTokenize = css_selector_tokenize;\nexport const cssToken2Text = css_token_2_text;\nexport const CssCompress = css_compress;\n\nexport const HtmlTokenize = html_tokenize;\nexport const htmlToken2Text = html_token_2_text;\nexport const HtmlCompress = html_compress;\n\nexport const createToken = create_token;\nexport const createRawToken = create_raw_token;\n\n/**\n * has template syntax in text\n */\nexport function hasTpl(text, options = {}) {\n  const instance = new BaseTemplate(text, options);\n  return instance.hasTpl();\n}\n\n/**\n * get html attribute value\n */\nexport function getHtmlAttrValue(attrs, name) {\n  let value;\n  attrs.some(item => {\n    if (item.nameLowerCase === name) {\n      value = item.value;\n      return true;\n    }\n  });\n  return value;\n}\n/**\n * set html attribute value\n */\nexport function setHtmlAttrValue(attrs, name, value) {\n  const flag = attrs.some(item => {\n    if (item.nameLowerCase === name) {\n      item.value = value;\n      return true;\n    }\n  });\n  if (!flag) {\n    attrs.push({\n      name,\n      value,\n      quote: '\"',\n      nameLowerCase: name\n    });\n  }\n  return attrs;\n}\n"]}