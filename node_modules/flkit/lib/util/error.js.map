{"version":3,"sources":["../../src/util/error.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;IAKqB,S;;;;;;;;;AAQnB,uBAAqC;AAAA,QAAzB,OAAyB,yDAAf,EAAe;AAAA,QAAX,IAAW;AAAA,QAAL,GAAK;AAAA;;AACnC,SAAK,OAAL,GAAe,OAAf;AACA,QAAI,SAAS,SAAb,EAAwB;AACtB,WAAK,IAAL,GAAY,OAAO,CAAnB;AACA,WAAK,GAAL,GAAW,MAAM,CAAjB;AACD;AACD,SAAK,KAAL,GAAa,IAAI,KAAJ,CAAU,KAAK,QAAL,EAAV,EAA2B,KAAxC;AACD;;;;;;;sBAKD,Q,uBAAW;AACT,QAAI,KAAK,IAAL,KAAc,SAAlB,EAA6B;AAC3B,aAAO,KAAK,OAAL,iBAA0B,KAAK,IAA/B,eAA6C,KAAK,GAAlD,SAAP;AACD;AACD,WAAO,KAAK,OAAL,GAAe,IAAtB;AACD,G;;;;;kBAzBkB,S","file":"error.js","sourcesContent":["'use strict';\n\n/**\n * error class\n */\nexport default class BaseError {\n  /**\n   * init\n   * @param  {String} message [error message]\n   * @param  {Number} line    [error line]\n   * @param  {Number} col     [error col]\n   * @return {Object}         []\n   */\n  constructor(message = '', line, col) {\n    this.message = message;\n    if (line !== undefined) {\n      this.line = line + 1;\n      this.col = col + 1;\n    }\n    this.stack = new Error(this.toString()).stack;\n  }\n  /**\n   * toString\n   * @return {String} get error string\n   */\n  toString() {\n    if (this.line !== undefined) {\n      return this.message + ` (line: ${this.line}, col: ${this.col})\\n`;\n    }\n    return this.message + '\\n';\n  }\n}\n"]}