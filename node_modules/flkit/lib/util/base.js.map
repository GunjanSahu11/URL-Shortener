{"version":3,"sources":["../../src/util/base.js"],"names":[],"mappings":"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","file":"base.js","sourcesContent":["\nimport util from 'util';\n\nimport Message from './message.js';\nimport BaseTemplate from '../template/base.js';\nimport PHPTemplate from '../template/php.js';\nimport SmartyTemplate from '../template/smarty.js';\nimport Err from './error.js';\n\nconst isArray = Array.isArray;\n\nconst templates = {\n  php: PHPTemplate,\n  smarty: SmartyTemplate\n};\n\nexport default class Base {\n  /**\n   * constructor\n   * @param  {String} text    []\n   * @param  {Object} options []\n   * @return {}         []\n   */\n  constructor(text = '', options = {\n    tpl: '',\n    ld: [],\n    rd: []\n  }) {\n    this.text = this.clean(text);\n    this._text = this.text.toLowerCase(); // text lowercase\n    this.length = this.text.length;\n    this.options = options;\n\n    this.initTpl();\n    this._hasTpl = this.hasTpl();\n  }\n  /**\n   * remove unnecessary chars in text\n   * @param  {String} text [source text]\n   * @return {String}      [cleaned text]\n   */\n  clean(text) {\n    // \\uFEFF is BOM char\n    return text.replace(/\\r\\n?|[\\n\\u2028\\u2029]/g, '\\n').replace(/\\uFEFF/g, '');\n  }\n  /**\n   * init tpl\n   * @return {} []\n   */\n  initTpl() {\n    this.tpl = (this.options.tpl || '').toLowerCase();\n    if (!this.tpl || !this.options.ld) {\n      this.ld = [];\n      this.rd = [];\n      return;\n    }\n    let ld = this.options.ld;\n    let rd = this.options.rd;\n    if (!isArray(ld)) {\n      ld = [ld];\n      rd = [rd];\n    }\n    ld = ld.filter(item => item);\n    rd = rd.filter(item => item);\n    if (ld.length !== rd.length) {\n      throw new Error(Message.DelimiterNotEqual);\n    }\n    this.ld = ld;\n    this.rd = rd;\n  }\n  /**\n   * check text has tpl\n   * @return {Boolean}      []\n   */\n  hasTpl(text) {\n    if (!this.tpl || !this.ld.length) {\n      return false;\n    }\n    const tplInstance = this.getTplInstance();\n    for (var i = 0, length = this.ld.length, ld, rd; i < length; i++) {\n      ld = this.ld[i];\n      rd = this.rd[i];\n      if (tplInstance.hasTpl(text || this.text, ld, rd)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  /**\n   * throw error\n   * @param  {[type]} message:    string        [description]\n   * @param  {[type]} line?:      number        [description]\n   * @param  {[type]} col?:number [description]\n   * @param  {[type]} data?:any   [description]\n   * @return {[type]}             [description]\n   */\n  error(message, line, col, data) {\n    if (isArray(line)) {\n      data = line;\n      line = undefined;\n    }\n    if (line === undefined && this.line !== undefined) {\n      line = this.line;\n      col = this.col;\n    }\n    if (isArray(data)) {\n      message = util.format.call(null, data.unshift(message));\n    }\n    throw new Err(message, line, col);\n  }\n  /**\n   * get template instance\n   * @return {}       []\n   */\n  getTplInstance() {\n    let cls = BaseTemplate;\n    if (this.tpl && templates[this.tpl]) {\n      cls = templates[this.tpl];\n    }\n    return new cls();\n  }\n  /**\n   * register template\n   * @type {}\n   */\n  registerTpl(type, tplClass) {\n    templates[type] = tplClass;\n  }\n  /**\n   * run\n   * @return {[type]} []\n   */\n  run() {\n\n  }\n}\n"]}