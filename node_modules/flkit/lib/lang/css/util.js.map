{"version":3,"sources":["../../../src/lang/css/util.js"],"names":[],"mappings":";;;;;;;;;;;;;QA2BgB,U,GAAA,U;QAUA,4B,GAAA,4B;QAuCA,e,GAAA,e;QAMA,uB,GAAA,uB;QAYA,kB,GAAA,kB;QAQA,U,GAAA,U;QAqCA,c,GAAA,c;QAuCA,O,GAAA,O;QAqBA,a,GAAA,a;QA4BA,mB,GAAA,mB;QASA,e,GAAA,e;QAgBA,Q,GAAA,Q;QAMA,iB,GAAA,iB;QAaA,gB,GAAA,gB;QAWA,qB,GAAA,qB;;AA1RhB;;;;AACA;;;;AAEA;;AAKA;;AAEA;;;;;;;;AAiBO,SAAS,UAAT,CAAoB,IAApB,EAA0B;;AAE/B,SAAO,QAAQ,IAAR,IAAgB,QAAQ,IAAxB,IAAgC,SAAS,IAAhD;AACD;;;;;;;AAOM,SAAS,4BAAT,CAAsC,MAAtC,EAA8C;AACnD,MAAI,IAAI,CAAR;MAAW,SAAS,OAAO,MAA3B;MAAmC,cAAnC;MAA0C,cAAc,CAAxD;MAA2D,iBAA3D;AACA,SAAO,IAAI,MAAX,EAAmB,GAAnB,EAAwB;AACtB,YAAQ,OAAO,CAAP,CAAR;AACA,YAAQ,MAAM,IAAd;AACE,WAAK,qBAAU,eAAf;AACE,uBAAe,GAAf;AACA;AACF,WAAK,qBAAU,iBAAf;AACA,WAAK,qBAAU,2BAAf;AACE,uBAAe,CAAf;AACA;AACF,WAAK,qBAAU,kBAAf;AACA,WAAK,qBAAU,sBAAf;AACE,uBAAe,EAAf;AACA;AACF,WAAK,qBAAU,yBAAf;AACE,YAAI,WAAW,IAAX,CAAgB,MAAM,KAAtB,CAAJ,EAAkC;AAChC,qBAAW,gCAAqB,MAAM,KAAN,CAAY,KAAZ,CAAkB,CAAlB,EAAqB,CAAC,CAAtB,CAArB,CAAX;AACA,yBAAe,SAAS,GAAT,GAAe,KAAf,CAAqB,CAArB,EAAwB,WAAvC;AACD,SAHD,MAGO;AACL,yBAAe,EAAf;AACD;AACD;AAnBJ;AAqBD;AACD,SAAO,WAAP;AACD;;;;AAIM,IAAM,kCAAa,oDAAnB;;;;AAIA,IAAM,gDAAoB,mDAA1B;;;;AAIA,SAAS,eAAT,CAAyB,EAAzB,EAA6B;AAClC,SAAO,0BAAkB,OAAlB,CAA0B,EAA1B,IAAgC,CAAC,CAAxC;AACD;;;;AAIM,SAAS,uBAAT,CAAiC,kBAAjC,EAAqD;AAC1D,SAAO,mBAAmB,MAAnB,CAA0B,GAA1B,CAA8B,UAAC,KAAD,EAAQ,KAAR,EAAkB;AACrD,QAAI,WAAW,KAAf;AACA,QAAI,QAAQ,CAAZ,EAAe;AACb,iBAAW,iCAAsB,mBAAmB,MAAnB,CAA0B,QAAQ,CAAlC,CAAtB,EAA4D,KAA5D,CAAX;AACD;AACD,WAAO,CAAC,WAAW,GAAX,GAAiB,EAAlB,IAAwB,MAAM,KAArC;AACD,GANM,EAMJ,IANI,CAMC,EAND,CAAP;AAOD;;;;AAIM,SAAS,kBAAT,CAA4B,KAA5B,EAAmC;AACxC,SAAO,MAAM,GAAN,CAAU,KAAV,CAAgB,GAAhB,CAAoB,gBAAQ;AACjC,WAAO,wBAAwB,IAAxB,CAAP;AACD,GAFM,EAEJ,IAFI,CAEC,GAFD,CAAP;AAGD;;;;AAIM,SAAS,UAAT,CAAoB,MAApB,EAA6C;AAAA,MAAjB,UAAiB,yDAAJ,EAAI;;AAClD,MAAI,OAAO,EAAX;AACA,SAAO,OAAO,GAAP,CAAW,UAAC,KAAD,EAAQ,KAAR,EAAkB;AAClC,QAAM,SAAS,MAAM,aAAN,CAAoB,GAApB,CAAwB;AAAA,aAAQ,KAAK,KAAb;AAAA,KAAxB,EAA4C,IAA5C,CAAiD,EAAjD,CAAf;AACA,QAAI,QAAQ,EAAZ;AACA,YAAQ,MAAM,IAAd;AACE,WAAK,qBAAU,YAAf;AACE,gBAAQ,mBAAmB,KAAnB,CAAR;AACA;AACF,WAAK,qBAAU,YAAf;AACE,gBAAQ,MAAM,GAAN,CAAU,MAAV,GAAmB,MAAM,GAAN,CAAU,KAA7B,GAAqC,MAAM,GAAN,CAAU,MAAvD;AACA;AACF,WAAK,qBAAU,SAAf;AACE,gBAAQ,MAAM,GAAN,CAAU,MAAV,GAAmB,MAAM,GAAN,CAAU,KAA7B,GAAqC,MAAM,GAAN,CAAU,MAAvD;AACA,YAAI,MAAM,GAAN,CAAU,SAAd,EAAyB;AACvB,mBAAS,YAAT;AACD;AACD;AACF;AACE,gBAAQ,MAAM,KAAd;AACA;AAfJ;AAiBA,QAAI,CAAC,MAAD,IAAW,QAAQ,CAAvB,EAA0B;AACxB,UAAM,eAAe,KAAK,KAAK,MAAL,GAAc,CAAnB,IAAwB,MAAM,CAAN,CAA7C;AACA,UAAI,WAAW,OAAX,CAAmB,YAAnB,IAAmC,CAAC,CAAxC,EAA2C;AACzC,gBAAQ,MAAM,KAAd;AACD;AACF;AACD,WAAO,SAAS,KAAhB;AACA,WAAO,IAAP;AACD,GA5BM,EA4BJ,IA5BI,CA4BC,EA5BD,CAAP;AA6BD;;;;;;AAMM,SAAS,cAAT,CAAwB,KAAxB,EAAiE;AAAA,MAAlC,MAAkC,yDAAzB,EAAyB;AAAA,MAArB,WAAqB,yDAAP,KAAO;;AACtE,MAAI,CAAC,MAAM,OAAN,CAAc,KAAd,CAAL,EAA2B;AACzB,YAAQ,MAAM,KAAN,CAAY,IAAZ,CAAR;AACD;AACD,MAAM,SAAS,MAAM,MAArB;AACA,MAAM,IAAI,CACR,EADQ,EAER,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAFQ,EAGR,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAHQ,EAIR,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAJQ,EAKR,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CALQ,CAAV;AAOA,MAAM,KAAK,EAAE,MAAF,CAAX;AACA,UAAQ,CACN,MAAM,GAAG,CAAH,CAAN,CADM,EAEN,MAAM,GAAG,CAAH,CAAN,CAFM,EAGN,MAAM,GAAG,CAAH,CAAN,CAHM,EAIN,MAAM,GAAG,CAAH,CAAN,CAJM,CAAR;AAMA,OAAK,IAAM,KAAX,IAAoB,MAApB,EAA4B;AAC1B,UAAM,QAAQ,CAAd,IAAmB,OAAO,KAAP,CAAnB;AACD;AACD,MAAI,MAAM,CAAN,MAAa,MAAM,CAAN,CAAjB,EAA2B;AACzB,UAAM,MAAN,CAAa,CAAb,EAAgB,CAAhB;AACD;AACD,MAAI,MAAM,MAAN,KAAiB,CAAjB,IAAsB,MAAM,CAAN,MAAa,MAAM,CAAN,CAAvC,EAAiD;AAC/C,UAAM,MAAN,CAAa,CAAb,EAAgB,CAAhB;AACD;AACD,MAAI,MAAM,MAAN,KAAiB,CAAjB,IAAsB,MAAM,CAAN,MAAa,MAAM,CAAN,CAAvC,EAAiD;AAC/C,UAAM,MAAN,CAAa,CAAb,EAAgB,CAAhB;AACD;AACD,MAAI,WAAJ,EAAiB;AACf,WAAO,KAAP;AACD;AACD,SAAO,MAAM,IAAN,CAAW,GAAX,EAAgB,IAAhB,EAAP;AACD;;;;AAIM,SAAS,OAAT,CAAiB,KAAjB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B,EAAiC;AACtC,MAAI,UAAU,IAAd,EAAoB;AAClB,QAAM,IAAI,CAAC,IAAI,CAAL,EAAQ,IAAI,CAAZ,EAAe,IAAI,CAAnB,CAAV;AACA,QAAI,SAAS,GAAb;AACA,MAAE,OAAF,CAAU,gBAAQ;AAChB,gBAAU,CAAC,OAAO,EAAP,GAAY,GAAZ,GAAkB,EAAnB,IAAyB,KAAK,QAAL,CAAc,EAAd,CAAnC;AACD,KAFD;AAGA,WAAO,MAAP;AACD;AACD,MAAI,MAAM,OAAN,CAAc,KAAd,MAAyB,CAAC,CAA9B,EAAiC;AAC/B,WAAO,KAAP;AACD;AACD,MAAM,SAAS,kDAAf;AACA,UAAQ,MAAM,OAAN,CAAc,MAAd,EAAsB,UAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAgB;AAC5C,WAAO,QAAQ,IAAR,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CAAP;AACD,GAFO,CAAR;AAGA,SAAO,KAAP;AACD;;;;AAIM,SAAS,aAAT,CAAuB,KAAvB,EAA8B,QAA9B,EAAwC;;AAE7C,aAAW,SAAS,WAAT,EAAX;AACA,MAAI,aAAa,cAAb,IAA+B,aAAa,cAA5C,IAA8D,aAAa,cAA/E,EAA+F;AAC7F,QAAI,MAAM,OAAN,CAAc,GAAd,MAAuB,CAAC,CAA5B,EAA+B;AAC7B,aAAO,eAAe,KAAf,CAAP;AACD;AACF;AACD,MAAM,OAAO;AACX,6BADW;AAEX,0CAFW;AAGX,2CAHW;AAIX,4CAJW;AAKX,6CALW;AAMX,0CANW;AAOX;AAPW,GAAb;;AAUA,UAAQ,QAAQ,KAAR,CAAR;AACA,MAAI,YAAY,IAAhB,EAAsB;AACpB,WAAO,KAAK,QAAL,EAAe,KAAf,KAAyB,KAAhC;AACD;AACD,SAAO,KAAP;AACD;;;;;AAKM,SAAS,mBAAT,CAA6B,QAA7B,EAAuC,KAAvC,EAA8C;AACnD,MAAI,MAAM,OAAN,CAAc,MAAd,IAAwB,CAAC,CAA7B,EAAgC;AAC9B,WAAO,IAAP;AACD;AACD,SAAO,CAAC,CAAC,0BAAkB,QAAlB,CAAT;AACD;;;;AAIM,SAAS,eAAT,CAAyB,MAAzB,EAAiC,MAAjC,EAAyC;AAC9C,OAAK,IAAM,GAAX,IAAkB,MAAlB,EAA0B;AACxB,QAAI,OAAO,GAAP,CAAJ,EAAiB;AACf,UAAI,CAAC,OAAO,GAAP,EAAY,KAAZ,CAAkB,GAAlB,CAAsB,SAAvB,IAAoC,OAAO,GAAP,EAAY,KAAZ,CAAkB,GAAlB,CAAsB,SAA9D,EAAyE;AACvE,eAAO,OAAO,GAAP,CAAP;AACA,eAAO,GAAP,IAAc,OAAO,GAAP,CAAd;AACD;AACF,KALD,MAKO;AACL,aAAO,GAAP,IAAc,OAAO,GAAP,CAAd;AACD;AACF;AACD,SAAO,MAAP;AACD;;;;AAIM,SAAS,QAAT,CAAkB,IAAlB,EAAwB;AAC7B,SAAO,CAAC,CAAC,gBAAQ,IAAR,CAAT;AACD;;;;AAIM,SAAS,iBAAT,CAA2B,QAA3B,EAAqC,KAArC,EAA4C;AACjD,MAAM,IAAI,0BAAkB,SAAS,WAAT,EAAlB,CAAV;AACA,MAAI,CAAC,CAAL,EAAQ;AACN,WAAO,KAAP;AACD;AACD,MAAI,OAAO,CAAP,KAAa,SAAjB,EAA4B;AAC1B,WAAO,CAAP;AACD;AACD,SAAO,EAAE,IAAF,CAAO,KAAP,CAAP;AACD;;;;AAIM,SAAS,gBAAT,CAA0B,QAA1B,EAAoC;AACzC,SAAO,yBAAiB,IAAjB,CAAsB,gBAAQ;AACnC,WAAO,SAAS,QAAT,IAAqB,SAAS,OAAT,CAAiB,OAAO,GAAxB,IAA+B,CAAC,CAA5D;AACD,GAFM,CAAP;AAGD;;;;;;;AAOM,SAAS,qBAAT,CAA+B,KAA/B,EAAwD;AAAA;;AAAA,MAAlB,IAAkB,yDAAX,SAAW;;AAC7D,MAAM,OAAO,yBAAiB,IAAjB,CAAb;AACA,MAAM,4CAAe,IAAf,IAAsB,CAAtB,cAAN;AACA,OAAK,OAAL,CAAa;AAAA,WAAQ,WAAW,IAAX,IAAmB,CAA3B;AAAA,GAAb;;AAEA,OAAK,IAAM,GAAX,IAAkB,KAAlB,EAAyB;AAAA,qBACG,MAAM,GAAN,CADH;AAAA,QAChB,QADgB,cAChB,QADgB;AAAA,QACN,KADM,cACN,KADM;;;AAGvB,QAAI,CAAC,QAAD,IACA,SAAS,IAAT,KAAkB,qBAAU,GAD5B,IAEA,MAAM,IAAN,KAAe,qBAAU,GAFzB,IAGA,MAAM,IAAN,KAAe,qBAAU,cAH7B,EAG6C;AAC3C,aAAO,KAAP;AACD;AACD,QAAM,gBAAgB,SAAS,KAAT,CAAe,WAAf,EAAtB;AACA,QAAG,kBAAkB,GAArB,EAA0B,OAAO,KAAP;AAC1B,QAAI,iBAAiB,UAArB,EAAiC;AAC/B,UAAI,SAAS,GAAT,CAAa,MAAb,IACD,MAAM,GAAN,CAAU,MADT,IAED,MAAM,GAAN,CAAU,SAFT,IAGD,MAAM,GAAN,CAAU,MAHb,EAGqB;AACnB,eAAO,KAAP;AACD,OALD,MAKO;AACL,mBAAW,aAAX,IAA4B,CAA5B;AACD;AACF;AACF;AACD,MAAI,WAAW,IAAX,CAAJ,EAAsB;AAAA;;;;;;;;;;AAUpB,UAAM,YAAY,oBAAY,KAAZ,CAAlB;AACA,UAAM,YAAY,UAAU,OAAV,CAAkB,IAAlB,CAAlB;AACA,UAAM,SAAS,EAAf;AACA,UAAM,QAAQ,MAAM,IAAN,EAAY,KAAZ,CAAkB,GAAlB,CAAsB,KAApC;AACA,WAAK,OAAL,CAAa,UAAC,IAAD,EAAO,KAAP,EAAiB;AAC5B,YAAI,WAAW,IAAX,CAAJ,EAAsB;AACpB,cAAM,MAAM,UAAU,OAAV,CAAkB,IAAlB,CAAZ;AACA,cAAI,MAAM,SAAV,EAAqB;AACnB,mBAAO,KAAP,IAAgB,MAAM,IAAN,EAAY,KAAZ,CAAkB,KAAlC;AACD;AACD,iBAAO,MAAM,IAAN,CAAP;AACD;AACF,OARD;AASA,YAAM,IAAN,EAAY,KAAZ,CAAkB,GAAlB,CAAsB,KAAtB,GAA8B,eAAe,KAAf,EAAsB,MAAtB,CAA9B;AACA,YAAM,IAAN,EAAY,KAAZ,CAAkB,KAAlB,GAA0B,MAAM,IAAN,EAAY,KAAZ,CAAkB,GAAlB,CAAsB,KAAhD;AAxBoB;AAyBrB,GAzBD,MAyBO;AAAA;AACL,UAAM,OAAO,KAAK,KAAL,CAAW,gBAAQ;AAC9B,eAAO,WAAW,IAAX,CAAP;AACD,OAFY,CAAb;AAGA,UAAI,CAAC,IAAL,EAAW;AACT;AAAA,aAAO;AAAP;AACD;AACD,UAAM,QAAQ,EAAd;AACA,WAAK,OAAL,CAAa,UAAC,IAAD,EAAO,KAAP,EAAiB;AAC5B,cAAM,KAAN,IAAe,MAAM,IAAN,EAAY,KAAZ,CAAkB,GAAlB,CAAsB,KAArC;AACA,eAAO,MAAM,IAAN,CAAP;AACD,OAHD;AAIA,UAAM,gBAAgB,2BAAY,qBAAU,YAAtB,EAAoC,IAApC,CAAtB;AACA,oBAAc,GAAd,GAAoB;AAClB,gBAAQ,EADU;AAElB,eAAO,IAFW;AAGlB,gBAAQ;AAHU,OAApB;AAKA,UAAM,aAAa,eAAe,KAAf,CAAnB;AACA,UAAM,aAAa,2BAAY,qBAAU,SAAtB,EAAiC,UAAjC,CAAnB;AACA,iBAAW,GAAX,GAAiB;AACf,gBAAQ,EADO;AAEf,eAAO,UAFQ;AAGf,gBAAQ,EAHO;AAIf,mBAAW;AAJI,OAAjB;AAMA,YAAM,IAAN,IAAc;AACZ,kBAAU,aADE;AAEZ,eAAO;AAFK,OAAd;AA1BK;;AAAA;AA8BN;AACD,SAAO,KAAP;AACD","file":"util.js","sourcesContent":["import TokenType from '../../util/token_type.js';\nimport SelectorTokenize from './selector_tokenize.js';\n\nimport {\n  makePredicate,\n  hasSpaceBetweenTokens\n} from '../../util/util.js';\n\nimport {createToken} from '../../util/util_ext.js';\n\nimport {\n  propertyHackPrefix,\n  selectorCharUntil,\n  pseudosElements21,\n  shortColor,\n  shortFontWeight,\n  multiSameProperty,\n  atTypes,\n  unMergeProperties,\n  unSortProperties,\n  propertyChildren\n} from './config.js';\n\n/**\n * is attribute char\n * @return {Boolean} [description]\n */\nexport function isAttrChar(code) {\n  // >= a && <= z or -\n  return code >= 0x61 && code <= 0x7a || code === 0x2d;\n}\n\n/**\n * Calculating a selector's specificity\n * @param  {Array} tokens [selector tokens]\n * @return {Number}        []\n */\nexport function calculateSelectorSpecificity(tokens) {\n  let i = 0, length = tokens.length, token, specificity = 0, instance;\n  for (; i < length; i++) {\n    token = tokens[i];\n    switch (token.type) {\n      case TokenType.CSS_SELECTOR_ID:\n        specificity += 100;\n        break;\n      case TokenType.CSS_SELECTOR_TYPE:\n      case TokenType.CSS_SELECTOR_PSEUDO_ELEMENT:\n        specificity += 1;\n        break;\n      case TokenType.CSS_SELECTOR_CLASS:\n      case TokenType.CSS_SELECTOR_ATTRIBUTE:\n        specificity += 10;\n        break;\n      case TokenType.CSS_SELECTOR_PSEUDO_CLASS:\n        if (/^:not\\(/i.test(token.value)) {\n          instance = new SelectorTokenize(token.value.slice(5, -1));\n          specificity += instance.run().group[0].specificity;\n        } else {\n          specificity += 10;\n        }\n        break;\n    }\n  }\n  return specificity;\n}\n/**\n * is hack char\n */\nexport const isHackChar = makePredicate(propertyHackPrefix);\n/**\n * selector char util\n */\nexport const selectorBreakChar = makePredicate(selectorCharUntil);\n/**\n * is pseudo elements\n */\nexport function isPseudoElement(el) {\n  return pseudosElements21.indexOf(el) > -1;\n}\n/**\n * selector group token to text\n */\nexport function selectorGroupToken2Text(selectorGroupToken) {\n  return selectorGroupToken.tokens.map((token, index) => {\n    let hasSpace = false;\n    if (index > 0) {\n      hasSpace = hasSpaceBetweenTokens(selectorGroupToken.tokens[index - 1], token);\n    }\n    return (hasSpace ? ' ' : '') + token.value;\n  }).join('');\n}\n/**\n * selector token to text\n */\nexport function selectorToken2Text(token) {\n  return token.ext.group.map(item => {\n    return selectorGroupToken2Text(item);\n  }).join(',');\n}\n/**\n * tokens to text\n */\nexport function token2Text(tokens, delimiters = []) {\n  let prev = '';\n  return tokens.map((token, index) => {\n    const prefix = token.commentBefore.map(item => item.value).join('');\n    let value = '';\n    switch (token.type) {\n      case TokenType.CSS_SELECTOR:\n        value = selectorToken2Text(token);\n        break;\n      case TokenType.CSS_PROPERTY:\n        value = token.ext.prefix + token.ext.value + token.ext.suffix;\n        break;\n      case TokenType.CSS_VALUE:\n        value = token.ext.prefix + token.ext.value + token.ext.suffix;\n        if (token.ext.important) {\n          value += '!important';\n        }\n        break;\n      default:\n        value = token.value;\n        break;\n    }\n    if (!prefix && index > 0) {\n      const combineChars = prev[prev.length - 1] + value[0];\n      if (delimiters.indexOf(combineChars) > -1) {\n        value = ' ' + value;\n      }\n    }\n    prev = prefix + value;\n    return prev;\n  }).join('');\n}\n\n/**\n * short for num value\n * margin: 10px 20px 10px 20px;\n */\nexport function short4NumValue(value, append = {}, returnArray = false) {\n  if (!Array.isArray(value)) {\n    value = value.split(/ +/);\n  }\n  const length = value.length;\n  const v = [\n    [],\n    [0, 0, 0, 0],\n    [0, 1, 0, 1],\n    [0, 1, 2, 1],\n    [0, 1, 2, 3]\n  ];\n  const sv = v[length];\n  value = [\n    value[sv[0]],\n    value[sv[1]],\n    value[sv[2]],\n    value[sv[3]]\n  ];\n  for (const index in append) {\n    value[index | 0] = append[index];\n  }\n  if (value[1] === value[3]) {\n    value.splice(3, 1);\n  }\n  if (value.length === 3 && value[0] === value[2]) {\n    value.splice(2, 1);\n  }\n  if (value.length === 2 && value[0] === value[1]) {\n    value.splice(1, 1);\n  }\n  if (returnArray) {\n    return value;\n  }\n  return value.join(' ').trim();\n}\n/**\n * rgb to hex\n */\nexport function rgb2Hex(value, r, g, b) {\n  if (value === true) {\n    const v = [r | 0, g | 0, b | 0];\n    let result = '#';\n    v.forEach(item => {\n      result += (item < 16 ? '0' : '') + item.toString(16);\n    });\n    return result;\n  }\n  if (value.indexOf('rgb') === -1) {\n    return value;\n  }\n  const rgbRex = /rgb\\s*\\(\\s*(\\d+)\\s*\\,\\s*(\\d+)\\s*\\,\\s*(\\d+)\\s*\\)/g;\n  value = value.replace(rgbRex, (a, r, g, b) => {\n    return rgb2Hex(true, r, g, b);\n  });\n  return value;\n}\n/**\n * get short value\n */\nexport function getShortValue(value, property) {\n  // http://www.w3schools.com/cssref/pr_border-width.asp\n  property = property.toLowerCase();\n  if (property === 'border-color' || property === 'border-style' || property === 'border-width') {\n    if (value.indexOf('(') === -1) {\n      return short4NumValue(value);\n    }\n  }\n  const list = {\n    color: shortColor,\n    'border-top-color': shortColor,\n    'border-left-color': shortColor,\n    'border-right-color': shortColor,\n    'border-bottom-color': shortColor,\n    'background-color': shortColor,\n    'font-weight': shortFontWeight\n  };\n  // rgb(0,0,0) -> #000000 (or #000 in this case later)\n  value = rgb2Hex(value);\n  if (property in list) {\n    return list[property][value] || value;\n  }\n  return value;\n}\n\n/**\n * is multi same property\n */\nexport function isMultiSameProperty(property, value) {\n  if (value.indexOf('calc') > -1) {\n    return true;\n  }\n  return !!multiSameProperty[property];\n}\n/**\n * merge properties\n */\nexport function mergeProperties(attrs1, attrs2) {\n  for (const key in attrs2) {\n    if (attrs1[key]) {\n      if (!attrs1[key].value.ext.important || attrs2[key].value.ext.important) {\n        delete attrs1[key];\n        attrs1[key] = attrs2[key];\n      }\n    } else {\n      attrs1[key] = attrs2[key];\n    }\n  }\n  return attrs1;\n}\n/**\n * is @ type\n */\nexport function isAtType(type) {\n  return !!atTypes[type];\n}\n/**\n * can not merged property\n */\nexport function isUnMergeProperty(property, value) {\n  const v = unMergeProperties[property.toLowerCase()];\n  if (!v) {\n    return false;\n  }\n  if (typeof v === 'boolean') {\n    return v;\n  }\n  return v.test(value);\n}\n/**\n * is unsort property\n */\nexport function isUnSortProperty(property) {\n  return unSortProperties.some(item => {\n    return item === property || property.indexOf(item + '-') > -1;\n  });\n}\n\n/**\n * combine property\n *\n *  a{padding: 10px; padding-left: 20px;} => a{padding: 20px 10px 10px 10px}\n */\nexport function mergePropertyChildren(attrs, type = 'padding') {\n  const list = propertyChildren[type];\n  const properties = {[type]: 0};\n  list.forEach(item => properties[item] = 0);\n\n  for (const key in attrs) {\n    const {property, value} = attrs[key];\n    // if has tpl or hack in attrs, can not combine it\n    if (!property ||\n        property.type === TokenType.TPL ||\n        value.type === TokenType.TPL ||\n        value.type === TokenType.CSS_BRACK_HACK) {\n      return attrs;\n    }\n    const propertyValue = property.value.toLowerCase();\n    if(propertyValue !== key) return attrs;\n    if (propertyValue in properties) {\n      if (property.ext.prefix ||\n         value.ext.suffix ||\n         value.ext.important ||\n         value.ext.prefix) {\n        return attrs;\n      } else {\n        properties[propertyValue] = 1;\n      }\n    }\n  }\n  if (properties[type]) {\n    /**\n     * 避免出现这种情况\n     *\n    .manage-content {\n        padding-top: 20px;\n        background: #fff;\n        padding: 0 26px 20px;\n    }\n    */\n    const attrsKeys = Object.keys(attrs);\n    const mainIndex = attrsKeys.indexOf(type);\n    const append = {};\n    const value = attrs[type].value.ext.value;\n    list.forEach((item, index) => {\n      if (properties[item]) {\n        const idx = attrsKeys.indexOf(item);\n        if (idx > mainIndex) {\n          append[index] = attrs[item].value.value;\n        }\n        delete attrs[item];\n      }\n    });\n    attrs[type].value.ext.value = short4NumValue(value, append);\n    attrs[type].value.value = attrs[type].value.ext.value;\n  } else {\n    const flag = list.every(item => {\n      return properties[item];\n    });\n    if (!flag) {\n      return attrs;\n    }\n    const value = [];\n    list.forEach((item, index) => {\n      value[index] = attrs[item].value.ext.value;\n      delete attrs[item];\n    });\n    const propertyToken = createToken(TokenType.CSS_PROPERTY, type);\n    propertyToken.ext = {\n      prefix: '',\n      value: type,\n      suffix: ''\n    };\n    const shortValue = short4NumValue(value);\n    const valueToken = createToken(TokenType.CSS_VALUE, shortValue);\n    valueToken.ext = {\n      prefix: '',\n      value: shortValue,\n      suffix: '',\n      important: false\n    };\n    attrs[type] = {\n      property: propertyToken,\n      value: valueToken\n    };\n  }\n  return attrs;\n}\n"]}