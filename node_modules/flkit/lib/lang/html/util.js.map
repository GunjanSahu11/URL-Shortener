{"version":3,"sources":["../../../src/lang/html/util.js"],"names":[],"mappings":"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","file":"util.js","sourcesContent":["import TokenType from '../../util/token_type.js';\nimport {hasSpaceBetweenTokens} from '../../util/util.js';\nimport {\n  tagAttrDefaultValue,\n  tagAttrOnlyName,\n  optionalEndTag,\n  voidElements,\n  safeTags,\n  allTags\n} from './config.js';\n\n/**\n * check code is tag name first char\n * @param  {Number}  code [char code]\n * @return {Boolean}      []\n */\nexport function isTagFirstChar(code) {\n  // a-z ! ? /\n  return code >= 0x61 && code <= 0x7a || code === 0x3f || code === 0x21 || code === 0x2f;\n}\n/**\n * check code is tag name char\n * @param  {Number}  code [char code]\n * @return {Boolean}      []\n */\nexport function isTagNameChar(code) {\n  // a-z 0-9 : -\n  return code >= 0x61 && code <= 0x7a || code === 0x3a || code === 0x2d || code >= 0x30 && code <= 0x39;\n}\n/**\n * parse script token attribute\n * @param  {Object} token []\n * @return {Object}             []\n */\nexport function parseScriptAttrs(token, jsTplTypes = []) {\n  let isScript = false, isExternal = false, type = '';\n  let attrs = token.ext.attrs || [], i = 0, item;\n  for (; item = attrs[i++];) {\n    switch (item.name) {\n      case 'src':\n        isExternal = true;\n        break;\n      case 'type':\n        type = (item.value || '').toLowerCase();\n        break;\n    }\n  }\n  if (!type || type === 'text/javascript') {\n    isScript = true;\n  }\n  token.ext.isScript = isScript;\n  token.ext.isExternal = isExternal;\n  token.ext.type = type;\n  token.ext.isTpl = !isScript && jsTplTypes && jsTplTypes.indexOf(type) > -1;\n  return token;\n}\n/**\n * parse style attr\n * @param  {Object} token []\n * @return {Object}       []\n */\nexport function parseStyleAttrs(token) {\n  var isStyle = true, attrs = token.attrs || [], i = 0, item, value;\n  for (; item = attrs[i++];) {\n    if (item.name === 'type') {\n      value = (item.value || '').toLowerCase();\n      if (value && value !== 'text/css') {\n        isStyle = false;\n      }\n      break;\n    }\n  }\n  token.ext.isStyle = isStyle;\n  return token;\n}\n\n/**\n * tag attrs to text\n */\nexport function attrs2Text(attrs = []) {\n  return attrs.map(attr => {\n    // is tpl\n    if (attr.type === TokenType.TPL) {\n      return (attr.spaceBefore ? ' ' : '') + attr.value;\n    }\n    const quote = attr.quote || '';\n    if ('value' in attr && 'name' in attr) {\n      return attr.name + '=' + quote + attr.value + quote + ' ';\n    }\n    if ('value' in attr) {\n      return attr.value + ' ';\n    }\n    return attr.name + ' ';\n  }).join('').trim();\n}\n\n/**\n * start token to text\n */\nconst startToken2Text = token => {\n  let attrText = attrs2Text(token.ext.attrs);\n  if (attrText) {\n    attrText = ' ' + attrText;\n  }\n  // slash on single tag\n  if (token.ext.slash) {\n    attrText += ' /';\n  }\n  return `<${token.ext.tag}${attrText}>`;\n};\n\n/**\n * tokens to text\n */\nexport function token2Text(tokens = [], stringify = {\n  css: null,\n  js: null\n}) {\n  let prevToken = null;\n  const result = [];\n\n  tokens.forEach(token => {\n    // has space between tokens\n    if (hasSpaceBetweenTokens(prevToken, token)) {\n      result.push(' ');\n    }\n    // has comment\n    if (token.commentBefore.length) {\n      token.commentBefore.forEach(item => {\n        result.push(item.value);\n      });\n    }\n    let contentToken;\n    switch (token.type) {\n      case TokenType.HTML_TAG_START:\n        result.push(startToken2Text(token));\n        break;\n      case TokenType.HTML_TAG_STYLE:\n        const start = startToken2Text(token.ext.start);\n        result.push(start);\n        contentToken = token.ext.content;\n        if (!stringify.css || !contentToken.ext.tokens) {\n          result.push(contentToken.value);\n        } else {\n          result.push(stringify.css(contentToken.ext.tokens));\n        }\n        result.push(token.ext.end.value);\n        break;\n      case TokenType.HTML_TAG_SCRIPT:\n        const startToken = token.ext.start;\n        result.push(startToken2Text(startToken));\n        contentToken = token.ext.content;\n        if (contentToken.ext.tokens) {\n          if (startToken.ext.isScript) {\n            result.push(stringify.js(contentToken.ext.tokens));\n          } else if (startToken.ext.isTpl) {\n            result.push(token2Text(contentToken.ext.tokens));\n          }\n        } else {\n          result.push(contentToken.value);\n        }\n        result.push(token.ext.end.value);\n        break;\n      case TokenType.HTML_TAG_END:\n        result.push(`</${token.ext.tag}>`);\n        break;\n      default:\n        result.push(token.value);\n        break;\n    }\n    prevToken = token;\n  });\n  return result.join('');\n}\n\n/**\n * is tag attribute default value\n */\nexport function isTagAttrDefaultValue(name, value, tag) {\n  const lowerValue = (value || '').toLowerCase();\n  for (const key in tagAttrDefaultValue) {\n    const attrs = tagAttrDefaultValue[key];\n    if (key === '*' || key === tag) {\n      for (const attrName in attrs) {\n        if (attrName === name && lowerValue === attrs[attrName]) {\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n}\n\n/**\n * tag attribute only has name\n */\nexport function isTagAttrOnlyName(attr) {\n  return !!tagAttrOnlyName[attr];\n}\n/**\n * attribute value no quote\n */\nexport function isAttrValueNoQuote(value) {\n  return /^\\w+$/.test(value);\n}\n\n/**\n * check is optional end tag\n */\nexport function isOptionalEndTag(tag, list) {\n  list = list || optionalEndTag;\n  if (Array.isArray(list)) {\n    return list.indexOf(tag) > -1;\n  }\n  return !!list[tag];\n}\n\n/**\n * check is void element\n */\nexport function isVoidElement(tag) {\n  return !!voidElements[tag];\n}\n/**\n * is standard tag\n */\nexport function isTag(tag) {\n  return !!allTags[tag];\n}\n\n/**\n * is safe tag\n */\nexport function isSafeTag(tag) {\n  return !!safeTags[tag];\n}\n"]}